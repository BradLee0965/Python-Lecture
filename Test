def factorial(n):
    '''Factorial Function -> n : int'''
    if n == 1: # n < 2
        return 1
    return n * factorial(n-1)

class A:
    pass

print(factorial(6))
print(factorial.__doc__)
print(type(factorial), type(A))
print(set(sorted(dir(factorial))) - set(sorted(dir(A))))
print(factorial.__name__)
print(factorial.__code__)

print()
print()

# 변수 할당
var_func = factorial


from functools import reduce
from operator import add

print(reduce(add, range(1,11)))
print(sum(range(1,11)))

print(reduce(lambda x, t : x + t, range(1,11)))

print(callable(str), callable(list))

from inspect import signature

sg = signature(var_func)
print(sg)
print(sg.parameters)

from operator import mul
from functools import partial

print(mul(10,10))
five = partial(mul, 5)
print(five(10))
six = partial(five, 6)

print(six())
print([five(i) for i in range(1,11)])
print(list(map(five, range(1,11))))